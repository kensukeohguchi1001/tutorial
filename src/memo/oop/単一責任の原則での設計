

どのような単位でクラスを作成したらいいのか？


●今の設計の課題(ツーカード)
現状だとクラスに複数のアクターが含まれている

プレイヤーに関することとカードに関することが別々になっている

一つのクラスに複数のアクターが含まれると、片方を変更するともう片方にも影響が出やすい、脆い設計になる

↓
単一責任の原則
「クラスはたった一つのアクターに足して責務を負うべき」という原則

現状
                      Player
          Player
Player >          >   Deck
          Deck
                      Card

アクターの異なるコードは別のクラスに分割しよう


可変にしたいからコンストラクトで指定する



■pokerGame

コンストラクタでプレイヤー1とプレイヤー2のカードを配列で受け取る

スタートメソッドでゲームを開始する

プレイヤーごとのカードのランクを入れる配列を用意

foreachでプレイヤー1とプレイヤー2のかーどを$cardsとして
その$cardsごとに処理を加えたいのでarray_mapを作成する

$pokerCardsに格納する、
pokerCardsの中プレイヤー二人のカード

アロー関数を使った処理がなんとなくでしか理解できていない

処理の順序、プレイヤークラスとカードクラスがあって、先にプレイヤーのインスタンスを作成するべきでは　

foreachのそとで宣言シテいる配列とそうでないもの(foreach内で宣言しているもの)の違いって
その値を返したいときっていう理解でいい？


returnしたい


0 = > 'C10'


['c10','c10']
0 => 1
